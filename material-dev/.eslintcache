[{"C:\\Users\\DEV01\\Desktop\\material1\\material-dev\\src\\index.js":"1","C:\\Users\\DEV01\\Desktop\\material1\\material-dev\\src\\App.js":"2","C:\\Users\\DEV01\\Desktop\\material1\\material-dev\\src\\reportWebVitals.js":"3","C:\\Users\\DEV01\\Desktop\\material1\\material-dev\\src\\component\\fragments\\Menu.js":"4","C:\\Users\\DEV01\\Desktop\\material1\\material-dev\\src\\component\\fragments\\Header.js":"5","C:\\Users\\DEV01\\Desktop\\material1\\material-dev\\src\\component\\pages\\Login.js":"6","C:\\Users\\DEV01\\Desktop\\material1\\material-dev\\src\\component\\pages\\Register.js":"7","C:\\Users\\DEV01\\Desktop\\material1\\material-dev\\src\\component\\pages\\Stock.js":"8","C:\\Users\\DEV01\\Desktop\\material1\\material-dev\\src\\component\\pages\\StockCreate.js":"9","C:\\Users\\DEV01\\Desktop\\material1\\material-dev\\src\\component\\pages\\StockEdit.js":"10","C:\\Users\\DEV01\\Desktop\\material1\\material-dev\\src\\reducers\\index.js":"11","C:\\Users\\DEV01\\Desktop\\material1\\material-dev\\src\\reducers\\login.reducers.js":"12"},{"size":864,"mtime":1608624040942,"results":"13","hashOfConfig":"14"},{"size":2261,"mtime":1608624727551,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":499162500000,"results":"16","hashOfConfig":"14"},{"size":3981,"mtime":1608354605282,"results":"17","hashOfConfig":"14"},{"size":1992,"mtime":1608368259399,"results":"18","hashOfConfig":"14"},{"size":2722,"mtime":1608622653272,"results":"19","hashOfConfig":"14"},{"size":2640,"mtime":1608612570598,"results":"20","hashOfConfig":"14"},{"size":147,"mtime":1608614941029,"results":"21","hashOfConfig":"14"},{"size":159,"mtime":1608614962781,"results":"22","hashOfConfig":"14"},{"size":161,"mtime":1608615548848,"results":"23","hashOfConfig":"14"},{"size":145,"mtime":1608624351660,"results":"24","hashOfConfig":"14"},{"size":217,"mtime":1608624793097,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"ax9f5p",{"filePath":"28","messages":"29","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"32"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\DEV01\\Desktop\\material1\\material-dev\\src\\index.js",["54"],"C:\\Users\\DEV01\\Desktop\\material1\\material-dev\\src\\App.js",["55","56","57"],"C:\\Users\\DEV01\\Desktop\\material1\\material-dev\\src\\reportWebVitals.js",[],["58","59"],"C:\\Users\\DEV01\\Desktop\\material1\\material-dev\\src\\component\\fragments\\Menu.js",["60","61","62","63","64","65"],"import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\r\nimport MailIcon from \"@material-ui/icons/Mail\";\r\n//  width_Menu\r\nconst drawerWidth = 240;\r\n//css\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  appBar: {\r\n    transition: theme.transitions.create([\"margin\", \"width\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n    transition: theme.transitions.create([\"margin\", \"width\"], {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  hide: {\r\n    display: \"none\",\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  drawerHeader: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: \"flex-end\",\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n    transition: theme.transitions.create(\"margin\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    marginLeft: -drawerWidth,\r\n  },\r\n  contentShift: {\r\n    transition: theme.transitions.create(\"margin\", {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    marginLeft: 0,\r\n  },\r\n}));\r\n\r\nfunction Menu(props) {\r\n\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"persistent\"\r\n        anchor=\"left\"\r\n        open={props.open}\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n      >\r\n        <div className={classes.drawerHeader}>\r\n          <IconButton onClick={props.handleDrawerClose}>\r\n            {theme.direction === \"ltr\" ? (\r\n              <ChevronLeftIcon />\r\n            ) : (\r\n              <ChevronRightIcon />\r\n            )}\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          {[\"Inbox\", \"Starred\", \"Send email\", \"Drafts\"].map((text, index) => (\r\n            <ListItem button key={text}>\r\n              <ListItemIcon>\r\n                {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\r\n              </ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n        <Divider />\r\n        <List>\r\n          {[\"All mail\", \"Trash\", \"Spam\"].map((text, index) => (\r\n            <ListItem button key={text}>\r\n              <ListItemIcon>\r\n                {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\r\n              </ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </Drawer>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default Menu;\r\n","C:\\Users\\DEV01\\Desktop\\material1\\material-dev\\src\\component\\fragments\\Header.js",[],"C:\\Users\\DEV01\\Desktop\\material1\\material-dev\\src\\component\\pages\\Login.js",["66","67","68","69"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport {\r\n  CardActions,\r\n  Card,\r\n  CardContent,\r\n  CardMedia,\r\n  Button,\r\n  Typography,\r\n  TextField,\r\n  Link,\r\n  Grid\r\n} from \"@material-ui/core\";\r\n\r\n// import * as loginActions from \"./../../actions/login.action\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    maxWidth: 345\r\n  },\r\n  media: {\r\n    height: 200\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2)\r\n  }\r\n}));\r\n\r\nexport default function Login(props) {\r\n  const classes = useStyles();\r\n  const [account, setAccount] = React.useState({\r\n    username: \"admin\",\r\n    password: \"1234\"\r\n  });\r\n\r\n  // const dispatch = useDispatch();\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardMedia\r\n        className={classes.media}\r\n        image={`${process.env.PUBLIC_URL}/images/authen_header.jpg`}\r\n        title=\"Contemplative Reptile\"\r\n      />\r\n      <CardContent>\r\n        <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n          Login\r\n        </Typography>\r\n        \r\n        <form\r\n          className={classes.form}\r\n          noValidate\r\n          onSubmit={e => {\r\n            props.history.push(\"/stock\");\r\n          }}>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            value={account.username}\r\n            onChange={e => {\r\n              setAccount({\r\n                ...account,\r\n                username: e.target.value\r\n              });\r\n            }}\r\n            id=\"username\"\r\n            label=\"Username\"\r\n            autoComplete=\"email\"\r\n            autoFocus\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            value={account.password}\r\n            onChange={e => {\r\n              setAccount({\r\n                ...account,\r\n                password: e.target.value\r\n              });\r\n            }}\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n          />\r\n\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Sign In\r\n          </Button>\r\n          <Button\r\n            onClick={() => props.history.push(\"/register\")}\r\n            fullWidth\r\n            size=\"small\"\r\n            color=\"primary\"\r\n          >\r\n            Register\r\n          </Button>\r\n        </form>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n","C:\\Users\\DEV01\\Desktop\\material1\\material-dev\\src\\component\\pages\\Register.js",["70","71","72"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Formik } from \"formik\";\r\n\r\nimport {\r\n  CardActions,\r\n  Card,\r\n  CardContent,\r\n  CardMedia,\r\n  Button,\r\n  Typography,\r\n  TextField,\r\n  Link,\r\n  Grid\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    maxWidth: 345\r\n  },\r\n  media: {\r\n    height: 200\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2)\r\n  }\r\n}));\r\n\r\nexport default function Register(props) {\r\n  const classes = useStyles();\r\n\r\n  function showForm({\r\n    values,\r\n    handleChange,\r\n    handleSubmit,\r\n    setFieldValue,\r\n    isSubmitting\r\n  }) {\r\n    return (\r\n      <form className={classes.form} noValidate onSubmit={handleSubmit}>\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          required\r\n          fullWidth\r\n          value={values.username}\r\n          onChange={handleChange}\r\n          id=\"username\"\r\n          label=\"Username\"\r\n          autoComplete=\"email\"\r\n          autoFocus\r\n        />\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          required\r\n          fullWidth\r\n          value={values.password}\r\n          onChange={handleChange}\r\n          name=\"password\"\r\n          label=\"Password\"\r\n          type=\"password\"\r\n          id=\"password\"\r\n          autoComplete=\"current-password\"\r\n        />\r\n\r\n        <Button\r\n          type=\"submit\"\r\n          fullWidth\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          disabled={isSubmitting}\r\n          className={classes.submit}\r\n        >\r\n          Register\r\n        </Button>\r\n        <Button\r\n          onClick={() => props.history.goBack()}\r\n          fullWidth\r\n          size=\"small\"\r\n          color=\"primary\"\r\n        >\r\n          Cancel\r\n        </Button>\r\n      </form>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardMedia\r\n        className={classes.media}\r\n        image={`${process.env.PUBLIC_URL}/images/authen_header.jpg`}\r\n        title=\"Contemplative Reptile\"\r\n      />\r\n      <CardContent>\r\n        <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n          Register\r\n        </Typography>\r\n\r\n        <Formik\r\n          initialValues={{ username: \"admin\", password: \"1234\" }}\r\n          onSubmit={(values, { setSubmitting }) => {\r\n            setSubmitting(true);\r\n            setTimeout(() => {\r\n              setSubmitting(false);\r\n            }, 1000);\r\n            //  alert(JSON.stringify(values));\r\n          }}\r\n        >\r\n          {props => showForm(props)}\r\n        </Formik>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n","C:\\Users\\DEV01\\Desktop\\material1\\material-dev\\src\\component\\pages\\Stock.js",[],"C:\\Users\\DEV01\\Desktop\\material1\\material-dev\\src\\component\\pages\\StockCreate.js",[],"C:\\Users\\DEV01\\Desktop\\material1\\material-dev\\src\\component\\pages\\StockEdit.js",[],"C:\\Users\\DEV01\\Desktop\\material1\\material-dev\\src\\reducers\\index.js",[],"C:\\Users\\DEV01\\Desktop\\material1\\material-dev\\src\\reducers\\login.reducers.js",["73"],{"ruleId":"74","severity":1,"message":"75","line":13,"column":20,"nodeType":"76","messageId":"77","endLine":13,"endColumn":31},{"ruleId":"78","severity":1,"message":"79","line":2,"column":10,"nodeType":"76","messageId":"80","endLine":2,"endColumn":16},{"ruleId":"78","severity":1,"message":"81","line":11,"column":10,"nodeType":"76","messageId":"80","endLine":11,"endColumn":24},{"ruleId":"78","severity":1,"message":"82","line":11,"column":26,"nodeType":"76","messageId":"80","endLine":11,"endColumn":39},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"78","severity":1,"message":"87","line":2,"column":8,"nodeType":"76","messageId":"80","endLine":2,"endColumn":12},{"ruleId":"78","severity":1,"message":"88","line":5,"column":8,"nodeType":"76","messageId":"80","endLine":5,"endColumn":19},{"ruleId":"78","severity":1,"message":"89","line":6,"column":8,"nodeType":"76","messageId":"80","endLine":6,"endColumn":14},{"ruleId":"78","severity":1,"message":"90","line":7,"column":8,"nodeType":"76","messageId":"80","endLine":7,"endColumn":15},{"ruleId":"78","severity":1,"message":"91","line":9,"column":8,"nodeType":"76","messageId":"80","endLine":9,"endColumn":18},{"ruleId":"78","severity":1,"message":"92","line":12,"column":8,"nodeType":"76","messageId":"80","endLine":12,"endColumn":16},{"ruleId":"78","severity":1,"message":"93","line":5,"column":3,"nodeType":"76","messageId":"80","endLine":5,"endColumn":14},{"ruleId":"78","severity":1,"message":"94","line":12,"column":3,"nodeType":"76","messageId":"80","endLine":12,"endColumn":7},{"ruleId":"78","severity":1,"message":"95","line":13,"column":3,"nodeType":"76","messageId":"80","endLine":13,"endColumn":7},{"ruleId":"78","severity":1,"message":"96","line":17,"column":10,"nodeType":"76","messageId":"80","endLine":17,"endColumn":21},{"ruleId":"78","severity":1,"message":"93","line":6,"column":3,"nodeType":"76","messageId":"80","endLine":6,"endColumn":14},{"ruleId":"78","severity":1,"message":"94","line":13,"column":3,"nodeType":"76","messageId":"80","endLine":13,"endColumn":7},{"ruleId":"78","severity":1,"message":"95","line":14,"column":3,"nodeType":"76","messageId":"80","endLine":14,"endColumn":7},{"ruleId":"97","severity":1,"message":"98","line":7,"column":1,"nodeType":"99","endLine":12,"endColumn":3},"no-use-before-define","'middlewares' was used before it was defined.","Identifier","usedBeforeDefined","no-unused-vars","'Button' is defined but never used.","unusedVar","'createMuiTheme' is defined but never used.","'ThemeProvider' is defined but never used.","no-native-reassign",["100"],"no-negated-in-lhs",["101"],"'clsx' is defined but never used.","'CssBaseline' is defined but never used.","'AppBar' is defined but never used.","'Toolbar' is defined but never used.","'Typography' is defined but never used.","'MenuIcon' is defined but never used.","'CardActions' is defined but never used.","'Link' is defined but never used.","'Grid' is defined but never used.","'useDispatch' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]